# -*- coding: utf-8 -*-
"""Eda.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k8TASxGywv-y9gc9SeQ4jT_dIZDZWj9s
"""

import warnings 
warnings.filterwarnings("ignore")
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

data = pd.read_excel('/content/drive/MyDrive/assessment/Training Set.xlsx')
data.shape

data.head()

data.isnull().sum()

## knowing about the feature the taget
data.groupby('Weekday')['target'].sum().plot(kind='bar',legend=True)
plt.show()
# 1-sunday and 7-saturday(since the power consumption is less)

data.groupby('Hour')['target'].sum().plot(kind='bar')
plt.show()
## here we can see that between 2am-8am electric consmpution is less
## from 10am-12pm the electric consmpution is heigh

data.groupby('Is Working Day')['target'].sum().plot(kind='bar')
plt.show()
## it not a good feature since there is no information that can be gained

# we will drop the date column 
df = data.copy()

df.drop('Date',axis=1,inplace=True)

df.head()

## lets change the Is woringing Day to binaty feature see ehat we get 
## making saturday sunday as non woking
for i in range(len(df)):
  if df['Weekday'][i]==1 or df['Weekday'][i]==7:
    df['Is Working Day'][i]=0
  else:
    df['Is Working Day'][i]=1

## viewing our new feature Is working
df.groupby('Is Working Day')['target'].sum().plot(kind='bar')
plt.show()

## checking the distrubtion
df['Is Working Day'].value_counts()

## adding new feature moonlighting 
for i in range(len(df)):
  if df['Hour'][i]<12 :
    df['MoonLighting'][i]=0
  else:
    df['MoonLighting'][i]=1

df['MoonLighting'].value_counts()

## Viewing our new feature
df.groupby('MoonLighting')['target'].sum().plot(kind='bar')
plt.show()

df = pd.read_csv('/content/drive/MyDrive/assessment/Train.csv')

df.head()

test = pd.read_excel('/content/drive/MyDrive/assessment/Test Set.xlsx')
test.head()

test.drop(['Date'],axis=1,inplace=True)

for i in range(len(test)):
  if test['Weekday'][i]==1 or test['Weekday'][i]==7:
    test['Is Working Day'][i]=0
  else:
    test['Is Working Day'][i]=1

test['MoonLighting'] = np.where(test['Hour']<12,0,1)

train.head()

test.to_csv('/content/drive/MyDrive/assessment/test.csv')

