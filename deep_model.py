# -*- coding: utf-8 -*-
"""deep_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pi2AG5M69xeubXIadPZ9TsX8MZuHrjx8
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
import keras
from keras.models import Sequential
from keras.layers import Dense,Activation

data = pd.read_csv('/content/drive/MyDrive/assessment/Train.csv')
data.drop(['Unnamed: 0'],axis=1,inplace=True)
data.head()

max = data['target'].max()
min = data['target'].min()

y = data[['target']]

data.drop(['target'],axis=1,inplace=True)

X = data.iloc[:,:]

# scaling the input feature
scaler = MinMaxScaler()
X = scaler.fit_transform(X)

X.shape

# scaling the output feature
y = scaler.fit_transform(y)

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)

# making a simple ANN network
model = Sequential()
model.add(Dense(100, input_dim=12,kernel_initializer='he_uniform',activation="relu",))
model.add(Dense(256, kernel_initializer='he_uniform',activation="relu"))
model.add(Dense(156, kernel_initializer='he_uniform',activation="relu"))
model.add(Dense(56, kernel_initializer='he_uniform',activation="relu"))
model.add(Dense(1,activation='linear'))
optimizer = keras.optimizers.Adam(learning_rate=0.001, beta_1=0.9, beta_2=0.99, epsilon=1e-05, amsgrad=False,name='Adam')
model.compile(loss='mse', optimizer=optimizer, metrics=['mse'])

model.fit(X_train,y_train,batch_size=1, epochs=5, shuffle=False,validation_data=(X_test,y_test))

test = pd.read_csv('/content/drive/MyDrive/assessment/test.csv')
test.drop(['Unnamed: 0','target'],axis=1,inplace=True)
test.head()

#scaling the test data
X_test = scaler.fit_transform(test)

y_pred = model.predict(X_test)

y = y_pred*max+min

y[0]

add = pd.read_excel('/content/drive/MyDrive/assessment/Test Set.xlsx')
add.head()

add['ANN_target'] = y

add.head()

add.to_excel('/content/drive/MyDrive/assessment/add.xlsx')



